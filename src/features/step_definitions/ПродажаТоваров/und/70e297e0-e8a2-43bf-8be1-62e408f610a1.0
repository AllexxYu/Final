{3,
{38,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},0,"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",0,0,1,
{19,
{0},0,0,0,7,"LeftCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"LeftCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,
{19,
{0},0,0,0,7,"RightCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"RightCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
}
},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ТоварНеСписанИзОстатковТовара()"",""ТоварНеСписанИзОстатковТовара"",""Допустим  товар не списан из остатков товара"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯСоздаюДокументПродажа()"",""ЯСоздаюДокументПродажа"",""Когда я создаю документ Продажа"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗаполняюШапкуДокументаПродажа()"",""ЯЗаполняюШапкуДокументаПродажа"",""И я заполняю шапку документа   Продажа"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗаполняюТоварыДокументаПродажа()"",""ЯЗаполняюТоварыДокументаПродажа"",""И я заполняю товары Документа Продажа"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯПровожуДокументПродажа()"",""ЯПровожуДокументПродажа"",""И я провожу документ Продажа"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ТовараДостаточноеКоличество()"",""ТовараДостаточноеКоличество"",""И товара достаточное количество"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ДокументПродажаПроводится()"",""ДокументПродажаПроводится"",""Тогда  документ Продажа  проводится"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗаполняюШапкуДокумента()"",""ЯЗаполняюШапкуДокумента"",""И я заполняю шапку документа"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗаполняюТовары()"",""ЯЗаполняюТовары"",""И я заполняю товары"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ТовараНедостаточноеКоличество()"",""ТовараНедостаточноеКоличество"",""И товара недостаточное количество"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ДокументПродажаНеПроводится()"",""ДокументПродажаНеПроводится"",""Тогда  документ Продажа не проводится"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ДокументПродажаВыдаетСообщениеОбОшибке()"",""ДокументПродажаВыдаетСообщениеОбОшибке"",""И документ Продажа выдает сообщение об ошибке"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим  товар не списан из остатков товара
//@ТоварНеСписанИзОстатковТовара()
Процедура ТоварНеСписанИзОстатковТовара() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Когда я создаю документ Продажа
//@ЯСоздаюДокументПродажа()
Процедура ЯСоздаюДокументПродажа() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И я заполняю шапку документа   Продажа
//@ЯЗаполняюШапкуДокументаПродажа()
Процедура ЯЗаполняюШапкуДокументаПродажа() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И я заполняю товары Документа Продажа
//@ЯЗаполняюТоварыДокументаПродажа()
Процедура ЯЗаполняюТоварыДокументаПродажа() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И я провожу документ Продажа
//@ЯПровожуДокументПродажа()
Процедура ЯПровожуДокументПродажа() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И товара достаточное количество
//@ТовараДостаточноеКоличество()
Процедура ТовараДостаточноеКоличество() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда  документ Продажа  проводится
//@ДокументПродажаПроводится()
Процедура ДокументПродажаПроводится() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И я заполняю шапку документа
//@ЯЗаполняюШапкуДокумента()
Процедура ЯЗаполняюШапкуДокумента() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И я заполняю товары
//@ЯЗаполняюТовары()
Процедура ЯЗаполняюТовары() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И товара недостаточное количество
//@ТовараНедостаточноеКоличество()
Процедура ТовараНедостаточноеКоличество() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//Тогда  документ Продажа не проводится
//@ДокументПродажаНеПроводится()
Процедура ДокументПродажаНеПроводится() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И документ Продажа выдает сообщение об ошибке
//@ДокументПродажаВыдаетСообщениеОбОшибке()
Процедура ДокументПродажаВыдаетСообщениеОбОшибке() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

//окончание текста модуля",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}
