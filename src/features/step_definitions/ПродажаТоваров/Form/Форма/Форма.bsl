//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТоварНеСписанИзОстатковТовара()","ТоварНеСписанИзОстатковТовара","Допустим  товар не списан из остатков товара");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯСоздаюДокументПродажа()","ЯСоздаюДокументПродажа","Когда я создаю документ Продажа");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюШапкуДокументаПродажа()","ЯЗаполняюШапкуДокументаПродажа","И я заполняю шапку документа   Продажа");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюТоварыДокументаПродажа()","ЯЗаполняюТоварыДокументаПродажа","И я заполняю товары Документа Продажа");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯПровожуДокументПродажа()","ЯПровожуДокументПродажа","И я провожу документ Продажа");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТовараДостаточноеКоличество()","ТовараДостаточноеКоличество","И товара достаточное количество");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДокументПродажаПроводится()","ДокументПродажаПроводится","Тогда  документ Продажа  проводится");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюШапкуДокумента()","ЯЗаполняюШапкуДокумента","И я заполняю шапку документа");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗаполняюТовары()","ЯЗаполняюТовары","И я заполняю товары");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ТовараНедостаточноеКоличество()","ТовараНедостаточноеКоличество","И товара недостаточное количество");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДокументПродажаНеПроводится()","ДокументПродажаНеПроводится","Тогда  документ Продажа не проводится");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДокументПродажаВыдаетСообщениеОбОшибке()","ДокументПродажаВыдаетСообщениеОбОшибке","И документ Продажа выдает сообщение об ошибке");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим  товар не списан из остатков товара
//@ТоварНеСписанИзОстатковТовара()
Процедура ТоварНеСписанИзОстатковТовара() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Когда я создаю документ Продажа
//@ЯСоздаюДокументПродажа()
Процедура ЯСоздаюДокументПродажа() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И я заполняю шапку документа   Продажа
//@ЯЗаполняюШапкуДокументаПродажа()
Процедура ЯЗаполняюШапкуДокументаПродажа() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И я заполняю товары Документа Продажа
//@ЯЗаполняюТоварыДокументаПродажа()
Процедура ЯЗаполняюТоварыДокументаПродажа() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И я провожу документ Продажа
//@ЯПровожуДокументПродажа()
Процедура ЯПровожуДокументПродажа() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И товара достаточное количество
//@ТовараДостаточноеКоличество()
Процедура ТовараДостаточноеКоличество() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда  документ Продажа  проводится
//@ДокументПродажаПроводится()
Процедура ДокументПродажаПроводится() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И я заполняю шапку документа
//@ЯЗаполняюШапкуДокумента()
Процедура ЯЗаполняюШапкуДокумента() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И я заполняю товары
//@ЯЗаполняюТовары()
Процедура ЯЗаполняюТовары() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И товара недостаточное количество
//@ТовараНедостаточноеКоличество()
Процедура ТовараНедостаточноеКоличество() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//Тогда  документ Продажа не проводится
//@ДокументПродажаНеПроводится()
Процедура ДокументПродажаНеПроводится() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаКлиенте
//И документ Продажа выдает сообщение об ошибке
//@ДокументПродажаВыдаетСообщениеОбОшибке()
Процедура ДокументПродажаВыдаетСообщениеОбОшибке() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

//окончание текста модуля